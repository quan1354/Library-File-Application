<UserControl x:Class="ModuleControl.Views.HomeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ModuleControl.Views"
             xmlns:prism="http://prismlibrary.com/" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <!--<RowDefinition Height="190"></RowDefinition>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="280"></RowDefinition>-->
            <RowDefinition Height="60"></RowDefinition>
            <RowDefinition Height="2*"></RowDefinition>
            <RowDefinition Height="3*"></RowDefinition>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Background="LightBlue" BorderBrush="Black" BorderThickness="0,0,0,1">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="600"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="15,0">
                    <Button Width="80" Height="30" Command="{Binding UpCommand}" FontWeight="SemiBold">UP</Button>
                    <TextBlock VerticalAlignment="Center" Text="{Binding SelectedFolder.FolderPath}" FontSize="15" Margin="10,0"></TextBlock>
                </StackPanel>

                <StackPanel Grid.Column="4" Orientation="Horizontal" Height="30" HorizontalAlignment="Right" Margin="0 0 15 0">
                    <!--<Button Width="100" Margin="3" Background="Azure" FontSize="18" FontWeight="SemiBold" Command="{Binding InsertItem_Command}">INSERT</Button>-->
                    <!--<Button FontSize="12" FontWeight="SemiBold" Command="{Binding Counter_Command}" Margin="5 0 0 0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Padding="5 0">COUNTER</TextBlock>
                        <TextBlock Padding="0 0 5 0" FontWeight="Bold" Foreground="Red"> <Run Text="("/><Run Text="{Binding Counter}"/><Run Text=")"/></TextBlock>
                    </StackPanel>
                </Button>-->
                    <!--<Button Command="{Binding DescriptionCommand}" Margin="10 0" FontWeight="SemiBold" Padding="5,0">Add Description</Button>-->
                    <Button Visibility="{Binding DescriptBtnVisibility}" Command="{Binding DescriptionCommand}" Margin="10 0" FontWeight="SemiBold" Padding="5,0">Add Description</Button>
                    <!--"<Button Command="{Binding DataContext.ChangeFolder, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Content="Refresh" FontWeight="SemiBold" Padding="5,0" Margin="0 0 10 0" CommandParameter="{Binding FilePathAnchor}"></Button>-->
                    <TextBox Width="250" Margin="0 0 10 0" VerticalContentAlignment="Center" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding SearchCommand}" />
                        </TextBox.InputBindings>
                    </TextBox>
                    <Button Content="search" Width="60" FontWeight="SemiBold" Padding="5" Command="{Binding SearchCommand}" />
                </StackPanel>
            </Grid>
        </Border>


        <Border Grid.Row="1" Background="AntiqueWhite">
            <Grid>
                <ListView Margin="10" FontSize="14" ItemsSource="{Binding Folders}" SelectedItem="{Binding SelectedFolder}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Folder Name" Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}">
                                <GridViewColumn.HeaderContainerStyle>
                                    <Style TargetType="GridViewColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        <Setter Property="FontWeight" Value="semiBold"/>
                                    </Style>
                                </GridViewColumn.HeaderContainerStyle>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding FolderName}"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DataContext.ChangeFolder, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding SelectedItem.FolderPath , RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
            </Grid>
        </Border>



        <Border Grid.Row="2" Background="GreenYellow" BorderBrush="Black" BorderThickness="0,1,0,0">
            <Grid Margin="15" >
                <!--<DataGrid ItemsSource="{Binding SelectedFolderVideos}" AutoGenerateColumns="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Video Name" Binding="{Binding}" />
                    </DataGrid.Columns>
                </DataGrid>-->
                <DataGrid FontSize="14" ItemsSource="{Binding Videos}" SelectionMode="Single" IsReadOnly="True" AutoGenerateColumns="False">
                    <DataGrid.Resources>
                        <Style x:Key="CenteredTextBlockStyle" TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <!--<DataGrid.ItemContainerStyle>
                        <Style>
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGrid.ItemContainerStyle>-->

                    <DataGrid.Columns>
                        <DataGridTextColumn Width="0.4*" Header="Video Name" Binding="{Binding VideoName}" />
                        <DataGridTextColumn Width="0.4*" Header="Last Modified" Binding="{Binding LastModified}" />
                        <DataGridTextColumn Width="0.4*" Header="File Type" Binding="{Binding FileType}" />
                        <DataGridTextColumn Width="0.4*" Header="File Size" Binding="{Binding FileSize}">

                        </DataGridTextColumn>
                        <DataGridTextColumn Width="0.4*" Header="Video Length" Binding="{Binding VideoLength}" />
                        <!--<DataGridTextColumn Width="0.4*" Header="Description" Binding="{Binding Description}" />-->
                    </DataGrid.Columns>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DataContext.SendMessageCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
                <!--<DataGrid AutoGenerateColumns="False" Name="_listOfVideo" ItemsSource="{Binding VideoList}" SelectionMode="Single" IsReadOnly="True" SelectedItem="{Binding SelectedItem}">
                    <DataGrid.Resources>
                        <Style x:Key="CenteredTextBlockStyle" TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn Width="0.1*" Header="Video ID" Binding="{Binding VideoID}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextBlockStyle}"/>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="0.4*" Header="Name" Binding="{Binding Name}"></DataGridTextColumn>
                        <DataGridTextColumn Width="0.4*" Header="Date" Binding="{Binding Date}"></DataGridTextColumn>
                        <DataGridTextColumn Width="0.5*" Header="Description" Binding="{Binding Description}"></DataGridTextColumn>
                        <DataGridTextColumn Width="0.5*" Header="Path" Binding="{Binding Path}"></DataGridTextColumn>

                        <DataGridTemplateColumn Width="Auto">
                            <DataGridTemplateColumn.Header>
                                <TextBlock Text="Actions" />
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Background="Azure" FontSize="16" Margin="3" FontWeight="SemiBold" Content="Update" Command="{Binding DataContext.UpdateItem_Command, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"  CommandParameter="{Binding}"/>
                                        <Button Background="Azure" FontSize="16" Margin="3" FontWeight="SemiBold" Content="Delete" Command="{Binding DataContext.DeleteItem_Command, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"  CommandParameter="{Binding}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick" >
                            <i:InvokeCommandAction Command="{Binding DataContext.SendMessageCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding SelectedItem , RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>-->
            </Grid>
        </Border>
        <!--<Button Grid.Row="2" Command="{Binding SendMessageCommand}" CommandParameter="CenterView"> UPLOAD</Button>-->
    </Grid>
</UserControl>
